// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-shed/distclient"
	"github.com/cloudfoundry-incubator/garden-shed/repository_fetcher"
	"github.com/pivotal-golang/lager"
)

type FakeDialer struct {
	DialStub        func(logger lager.Logger, host, repo string) (distclient.Conn, error)
	dialMutex       sync.RWMutex
	dialArgsForCall []struct {
		logger lager.Logger
		host   string
		repo   string
	}
	dialReturns struct {
		result1 distclient.Conn
		result2 error
	}
}

func (fake *FakeDialer) Dial(logger lager.Logger, host string, repo string) (distclient.Conn, error) {
	fake.dialMutex.Lock()
	fake.dialArgsForCall = append(fake.dialArgsForCall, struct {
		logger lager.Logger
		host   string
		repo   string
	}{logger, host, repo})
	fake.dialMutex.Unlock()
	if fake.DialStub != nil {
		return fake.DialStub(logger, host, repo)
	} else {
		return fake.dialReturns.result1, fake.dialReturns.result2
	}
}

func (fake *FakeDialer) DialCallCount() int {
	fake.dialMutex.RLock()
	defer fake.dialMutex.RUnlock()
	return len(fake.dialArgsForCall)
}

func (fake *FakeDialer) DialArgsForCall(i int) (lager.Logger, string, string) {
	fake.dialMutex.RLock()
	defer fake.dialMutex.RUnlock()
	return fake.dialArgsForCall[i].logger, fake.dialArgsForCall[i].host, fake.dialArgsForCall[i].repo
}

func (fake *FakeDialer) DialReturns(result1 distclient.Conn, result2 error) {
	fake.DialStub = nil
	fake.dialReturns = struct {
		result1 distclient.Conn
		result2 error
	}{result1, result2}
}

var _ repository_fetcher.Dialer = new(FakeDialer)
