// This file was generated by counterfeiter
package fakes

import (
	"io"
	"sync"

	"github.com/cloudfoundry-incubator/garden-shed/repository_fetcher"
	"github.com/docker/distribution/digest"
)

type FakeVerifier struct {
	VerifyStub        func(io.Reader, digest.Digest) (io.ReadCloser, error)
	verifyMutex       sync.RWMutex
	verifyArgsForCall []struct {
		arg1 io.Reader
		arg2 digest.Digest
	}
	verifyReturns struct {
		result1 io.ReadCloser
		result2 error
	}
}

func (fake *FakeVerifier) Verify(arg1 io.Reader, arg2 digest.Digest) (io.ReadCloser, error) {
	fake.verifyMutex.Lock()
	fake.verifyArgsForCall = append(fake.verifyArgsForCall, struct {
		arg1 io.Reader
		arg2 digest.Digest
	}{arg1, arg2})
	fake.verifyMutex.Unlock()
	if fake.VerifyStub != nil {
		return fake.VerifyStub(arg1, arg2)
	} else {
		return fake.verifyReturns.result1, fake.verifyReturns.result2
	}
}

func (fake *FakeVerifier) VerifyCallCount() int {
	fake.verifyMutex.RLock()
	defer fake.verifyMutex.RUnlock()
	return len(fake.verifyArgsForCall)
}

func (fake *FakeVerifier) VerifyArgsForCall(i int) (io.Reader, digest.Digest) {
	fake.verifyMutex.RLock()
	defer fake.verifyMutex.RUnlock()
	return fake.verifyArgsForCall[i].arg1, fake.verifyArgsForCall[i].arg2
}

func (fake *FakeVerifier) VerifyReturns(result1 io.ReadCloser, result2 error) {
	fake.VerifyStub = nil
	fake.verifyReturns = struct {
		result1 io.ReadCloser
		result2 error
	}{result1, result2}
}

var _ repository_fetcher.Verifier = new(FakeVerifier)
