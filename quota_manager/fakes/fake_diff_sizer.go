// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-shed/quota_manager"
	"github.com/pivotal-golang/lager"
)

type FakeDiffSizer struct {
	DiffSizeStub        func(logger lager.Logger, loopdevPath string) (uint64, error)
	diffSizeMutex       sync.RWMutex
	diffSizeArgsForCall []struct {
		logger      lager.Logger
		loopdevPath string
	}
	diffSizeReturns struct {
		result1 uint64
		result2 error
	}
}

func (fake *FakeDiffSizer) DiffSize(logger lager.Logger, loopdevPath string) (uint64, error) {
	fake.diffSizeMutex.Lock()
	fake.diffSizeArgsForCall = append(fake.diffSizeArgsForCall, struct {
		logger      lager.Logger
		loopdevPath string
	}{logger, loopdevPath})
	fake.diffSizeMutex.Unlock()
	if fake.DiffSizeStub != nil {
		return fake.DiffSizeStub(logger, loopdevPath)
	} else {
		return fake.diffSizeReturns.result1, fake.diffSizeReturns.result2
	}
}

func (fake *FakeDiffSizer) DiffSizeCallCount() int {
	fake.diffSizeMutex.RLock()
	defer fake.diffSizeMutex.RUnlock()
	return len(fake.diffSizeArgsForCall)
}

func (fake *FakeDiffSizer) DiffSizeArgsForCall(i int) (lager.Logger, string) {
	fake.diffSizeMutex.RLock()
	defer fake.diffSizeMutex.RUnlock()
	return fake.diffSizeArgsForCall[i].logger, fake.diffSizeArgsForCall[i].loopdevPath
}

func (fake *FakeDiffSizer) DiffSizeReturns(result1 uint64, result2 error) {
	fake.DiffSizeStub = nil
	fake.diffSizeReturns = struct {
		result1 uint64
		result2 error
	}{result1, result2}
}

var _ quota_manager.DiffSizer = new(FakeDiffSizer)
