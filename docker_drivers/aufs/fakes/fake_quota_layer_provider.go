// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-shed/docker_drivers/aufs"
)

type FakeQuotaLayerProvider struct {
	ProvideStub        func(dest string, quota int64) error
	provideMutex       sync.RWMutex
	provideArgsForCall []struct {
		dest  string
		quota int64
	}
	provideReturns struct {
		result1 error
	}
	DestroyStub        func(dest string) error
	destroyMutex       sync.RWMutex
	destroyArgsForCall []struct {
		dest string
	}
	destroyReturns struct {
		result1 error
	}
}

func (fake *FakeQuotaLayerProvider) Provide(dest string, quota int64) error {
	fake.provideMutex.Lock()
	fake.provideArgsForCall = append(fake.provideArgsForCall, struct {
		dest  string
		quota int64
	}{dest, quota})
	fake.provideMutex.Unlock()
	if fake.ProvideStub != nil {
		return fake.ProvideStub(dest, quota)
	} else {
		return fake.provideReturns.result1
	}
}

func (fake *FakeQuotaLayerProvider) ProvideCallCount() int {
	fake.provideMutex.RLock()
	defer fake.provideMutex.RUnlock()
	return len(fake.provideArgsForCall)
}

func (fake *FakeQuotaLayerProvider) ProvideArgsForCall(i int) (string, int64) {
	fake.provideMutex.RLock()
	defer fake.provideMutex.RUnlock()
	return fake.provideArgsForCall[i].dest, fake.provideArgsForCall[i].quota
}

func (fake *FakeQuotaLayerProvider) ProvideReturns(result1 error) {
	fake.ProvideStub = nil
	fake.provideReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeQuotaLayerProvider) Destroy(dest string) error {
	fake.destroyMutex.Lock()
	fake.destroyArgsForCall = append(fake.destroyArgsForCall, struct {
		dest string
	}{dest})
	fake.destroyMutex.Unlock()
	if fake.DestroyStub != nil {
		return fake.DestroyStub(dest)
	} else {
		return fake.destroyReturns.result1
	}
}

func (fake *FakeQuotaLayerProvider) DestroyCallCount() int {
	fake.destroyMutex.RLock()
	defer fake.destroyMutex.RUnlock()
	return len(fake.destroyArgsForCall)
}

func (fake *FakeQuotaLayerProvider) DestroyArgsForCall(i int) string {
	fake.destroyMutex.RLock()
	defer fake.destroyMutex.RUnlock()
	return fake.destroyArgsForCall[i].dest
}

func (fake *FakeQuotaLayerProvider) DestroyReturns(result1 error) {
	fake.DestroyStub = nil
	fake.destroyReturns = struct {
		result1 error
	}{result1}
}

var _ aufs.QuotaLayerProvider = new(FakeQuotaLayerProvider)
